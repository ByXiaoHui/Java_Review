<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiaohui.mapper.EmpMapper2">

    <sql id="empColumn">empno,ename,job,mgr,hiredate,sal,comm,deptno </sql>
    <sql id="beaseSelect">select <include refid="empColumn"></include> from emp</sql>
    <select id="findByCondition" resultType="emp">
        <include refid="beaseSelect"></include> where
        <if test="empno != null">
            and empno =#{empno}
        </if>
        <if test="ename != null and ename != ''">
            and ename like concat('%',#{ename},'%')
        </if>
        <if test="job != null and job != ''">
            and job =#{job}
        </if>
        <if test="mgr != null">
            and mgr =#{mgr}
        </if>
        <if test="hiredate != null">
            and hiredate =#{hiredate}
        </if>
        <if test="sal != null">
            and sal =#{sal}
        </if>
        <if test="comm != null">
            and comm =#{comm}
        </if>
        <if test="deptno != null">
            and deptno =#{deptno}
        </if>
    </select>

    <select id="findEmpByCondition" resultType="emp">
        select * from emp
        <where>
            <if test="empno != null">
                and empno= #{empno}
            </if>
            <if test="ename != null and ename != ''">
                and ename= #{ename}
            </if>
            <if test="job != null and job != ''">
                and job= #{job}
            </if>
            <if test="mgr != null ">
                and mgr= #{mgr}
            </if>
            <if test="hiredate != null ">
                and hiredate= #{hiredate}
            </if>
            <if test="sal != null">
                and sal= #{sal}
            </if>
            <if test="comm != null ">
                and comm =#{comm}
            </if>
            <if test="deptno != null ">
                and deptno= #{deptno}
            </if>
        </where>
    </select>

    <select id="findEmpByCondition2" resultType="emp">
        select * from emp
        <where>
            <choose>
                <when test="empno != null">
                    and empno= #{empno}
                </when>
                <when test="ename != null and ename != ''">
                    and ename= #{ename}
                </when>
                <when test="job != null and job != ''">
                    and job= #{job}
                </when>
                <when test="mgr != null ">
                    and mgr= #{mgr}
                </when>
                <when test="hiredate != null ">
                    and hiredate= #{hiredate}
                </when>
                <when test="sal != null">
                    and sal= #{sal}
                </when>
                <when test="comm != null ">
                    and comm =#{comm}
                </when>
                <when test="deptno != null ">
                    and deptno= #{deptno}
                </when>
            </choose>
        </where>
    </select>

    <!--int updateEmpByCondtion(Emp emp);-->
    <update id="updateEmpByCondtion" >
        update emp
        <set>
            <if test="ename != null and ename != '' ">
                , ename =#{ename}
            </if>
            <if test="job != null and ename != '' ">
                , job =#{job}
            </if>
            <if test="mgr != null ">
                , mgr =#{mgr}
            </if>
            <if test="hiredate != null ">
                , hiredate =#{hiredate}
            </if>
            <if test="sal != null ">
                , sal =#{sal}
            </if>
            <if test="comm != null ">
                , comm =#{comm}
            </if>
            <if test="deptno != null ">
                , deptno =#{deptno}
            </if>
        </set>
        where empno =#{empno}
    </update>


    <select id="findEmpByCondition3" resultType="emp">
        select * from emp
        <trim prefix="where" prefixOverrides="and">
            <if test="empno != null">
                and empno= #{empno}
            </if>
            <if test="ename != null and ename != ''">
                and ename= #{ename}
            </if>
            <if test="job != null and job != ''">
                and job= #{job}
            </if>
            <if test="mgr != null ">
                and mgr= #{mgr}
            </if>
            <if test="hiredate != null ">
                and hiredate= #{hiredate}
            </if>
            <if test="sal != null">
                and sal= #{sal}
            </if>
            <if test="comm != null ">
                and comm =#{comm}
            </if>
            <if test="deptno != null ">
                and deptno= #{deptno}
            </if>
        </trim>
    </select>
    
    <select id="findEmpByEname" resultType="emp" parameterType="emp">
        <bind name="linkPattern" value="'%'+ename+'%'"/>
        select * from emp where ename like #{linkPattern}
    </select>

    <!--List<Emp> findByEmpnos1(int[] empnos);
         collection=""  遍历的集合或者是数组
                         参数是数组,collection中名字指定为array
                         参数是List集合,collection中名字指定为list
         separator=""   多个元素取出的时候 用什么文字分隔
         open=""        以什么开头
         close=""       以什么结尾
         item=""        中间变量名
         for(Person per:PersonList)
    -->
    <select id="findByEmpnos1" resultType="emp">
        select * from emp  where empno in
        <foreach collection="array" separator="," open="(" close=")" item="deptno">
            #{deptno}
        </foreach>
    </select>
    <!-- List<Emp> findByEmpnos2(List<Integer> empnos);-->
    <select id="findByEmpnos2" resultType="emp">
        select * from emp  where empno in
        <foreach collection="list" separator="," open="(" close=")" item="deptno">
            #{deptno}
        </foreach>
    </select>
</mapper>