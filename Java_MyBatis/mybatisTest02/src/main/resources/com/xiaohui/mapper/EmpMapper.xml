<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiaohui.mapper.EmpMapper">

    <!--
    1 接口的名字和Mapper映射为文件名字必须保持一致(不包含拓展名)
    2 Mapper映射文件的namespace必须是接口的全路径名
    3 sql语句的id必须是对应方法的名
    4 DeptMapper映射文件应该和接口编译之后放在同一个目录下
    -->
    <!--List<Emp> findAll();-->
    <select id="findAll" resultType="emp" >
        select * from emp
    </select>


    <!--
    单个基本数据类型作为方法参数
    #{}中可以随便写,遵循见名知意
    Emp findByEmpno(int empno);
    -->
    <select id="findByEmpno" resultType="emp" >
        select * from emp where empno =#{empno}
    </select>


    <!--
     多个基本数据类型作为方法参数
     List<Emp> findByDeptnoAndSal(@Param("detpno") int deptno,@Param("sal") double sal);
     方式1 arg*     arg0 arg1 arg2 数字是索引,从0开始
     方式2 param*   param1 param2 param3 数字是编号,从1开始
     使用别名
     List<Emp> findByDeptnoAndSal(@Param("detpno") int deptno,@Param("sal") double sal);
     通过@Param注解使用别名之后,就不能再使用arg* 但是可以继续使用param*
    -->
    <select id="findByDeptnoAndSal" resultType="emp">
        <!--select * from emp Where deptno = #{arg0} and sal &gt;= #{arg1}-->
        <!--select * from emp Where deptno = #{param1} and sal &gt;= #{param2}-->
        select * from emp Where deptno = #{deptno} and sal &gt;= #{sal}
    </select>


    <!--
    参数是map,{}写键的名字
    -->
    <select id="findByDeptnoAndSalMap" resultType="emp" parameterType="map">
        select * from emp Where deptno = #{deptno} and sal &gt;= #{sal}
    </select>

    <!--单个引用类型,{}中写的使用对象的属性名-->
    <select id="findByDeptnoAndSalEmp" resultType="emp" parameterType="emp">
        select * from emp Where deptno = #{deptno} and sal &gt;= #{sal}
    </select>

    <!--
    多个引用类型作为方法参数
     List<Emp> findByDeptnoAndSal4(@Param("empa") Emp empa,@Param("empb") Emp empb);
     如果用@Param定义了别名,那么就不能使用arg*.属性名,但是可以使用param*.属性名和别名.属性名
    -->
    <select id="findByDeptnoAndSalEmpList" resultType="emp">
        <!--select * from emp Where deptno = #{arg0.deptno} and sal &gt;= #{arg1.sal}-->
        <!--select * from emp Where deptno = #{param1.deptno} and sal &gt;= #{param2.sal}-->
        select * from emp Where deptno = #{emp1.deptno} and sal &gt;= #{emp2.sal}
    </select>

<!--List<Emp> findByEname(String ename);-->
    <select id="findByEname" resultType="emp">
        select * from emp where ename like concat('%',#{ename},'%')
    </select>


    <!--int addEmp(Emp emp);-->
    <insert id="addEmp" parameterType="emp">
        insert into emp values(DEFAULT ,#{ename},#{job},#{mgr},#{hiredate},#{sal},#{comm},#{deptno})
    </insert>
    <!--int updateEnameByEmpno(@Param("empno") int empno,@Param("ename") String ename);-->
    <update id="updateEnameByEmpno">
        update emp set ename =#{ename} where empno =#{empno}
    </update>
    <!--int deleteByEmpno(int empno);-->
    <delete id="deleteByEmpno">
        delete from emp where empno =#{empno}
    </delete>
</mapper>